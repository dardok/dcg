diff -u -r -N linuxptp-3.1.1/clock.c linuxptp-3.1.1.b/clock.c
--- linuxptp-3.1.1/clock.c	2021-07-04 21:51:59.000000000 -0400
+++ linuxptp-3.1.1.b/clock.c	2022-03-04 08:10:09.308191571 -0500
@@ -992,6 +992,10 @@
 	c->timestamping = timestamping;
 	required_modes = clock_required_modes(c);
 	STAILQ_FOREACH(iface, &config->interfaces, list) {
+ 		tmp = config_get_string(config, iface->name, "network_namespace");
+ 		if (sk_reassociate_namespace(tmp)) {
+ 			return NULL;
+ 		}
 		memset(ts_label, 0, sizeof(ts_label));
 		rtnl_get_ts_device(interface_name(iface), ts_label);
 		interface_set_label(iface, ts_label);
diff -u -r -N linuxptp-3.1.1/config.c linuxptp-3.1.1.b/config.c
--- linuxptp-3.1.1/config.c	2021-07-04 21:51:59.000000000 -0400
+++ linuxptp-3.1.1.b/config.c	2022-03-04 08:04:18.801026162 -0500
@@ -275,6 +275,8 @@
 	PORT_ITEM_INT("msg_interval_request", 0, 0, 1),
 	PORT_ITEM_INT("neighborPropDelayThresh", 20000000, 0, INT_MAX),
 	PORT_ITEM_INT("net_sync_monitor", 0, 0, 1),
+	GLOB_ITEM_STR("netns_path", "/var/run/netns/"),
+	PORT_ITEM_STR("network_namespace", ""),
 	PORT_ITEM_ENU("network_transport", TRANS_UDP_IPV4, nw_trans_enu),
 	GLOB_ITEM_INT("ntpshm_segment", 0, INT_MIN, INT_MAX),
 	GLOB_ITEM_INT("offsetScaledLogVariance", 0xffff, 0, UINT16_MAX),
diff -u -r -N linuxptp-3.1.1/ptp4l.8 linuxptp-3.1.1.b/ptp4l.8
--- linuxptp-3.1.1/ptp4l.8	2021-07-04 21:51:59.000000000 -0400
+++ linuxptp-3.1.1.b/ptp4l.8	2022-03-04 08:04:18.801026162 -0500
@@ -292,6 +292,15 @@
 The MAC address to which peer delay messages should be sent.
 Relevant only with L2 transport. The default is 01:80:C2:00:00:0E.
 .TP
+.B network_namespace
+The network namspace in which the port operate.
+This option should be used if atleast one port operates in different
+namespaces than the other. When used, the ptp4l program needs to be
+opened in default namespace.
+Skip this option to select default namespace for the port.
+If all ports operates in same namespace, the ptp4l program can be opened
+directly in that namespace and this option can be disregarded.
+.TP
 .B network_transport
 Select the network transport. Possible values are UDPv4, UDPv6 and L2.
 The default is UDPv4.
@@ -375,6 +384,10 @@
 .SH PROGRAM AND CLOCK OPTIONS
 
 .TP
+.B netns_path
+Specifies the path where the named network namspace object is located.
+The default is /var/run/netns/
+.TP
 .B twoStepFlag
 Enable two-step mode for sync messages. One-step mode can be used only with
 hardware time stamping.
diff -u -r -N linuxptp-3.1.1/ptp4l.c linuxptp-3.1.1.b/ptp4l.c
--- linuxptp-3.1.1/ptp4l.c	2021-07-04 21:51:59.000000000 -0400
+++ linuxptp-3.1.1.b/ptp4l.c	2022-03-04 08:04:22.608973780 -0500
@@ -70,7 +70,7 @@
 
 int main(int argc, char *argv[])
 {
-	char *config = NULL, *req_phc = NULL, *progname;
+	char *config = NULL, *req_phc = NULL, *progname, *tmp;
 	enum clock_type type = CLOCK_TYPE_ORDINARY;
 	int c, err = -1, index, print_level;
 	struct clock *clock = NULL;
@@ -240,6 +240,11 @@
 		goto out;
 	}
 
+	tmp = config_get_string(cfg, NULL, "netns_path");
+	if (sk_initiate_namespace_reassociation(tmp) < 0) {
+		goto out;
+	}
+
 	clock = clock_create(type, cfg, req_phc);
 	if (!clock) {
 		fprintf(stderr, "failed to create a clock\n");
@@ -253,8 +258,11 @@
 			break;
 	}
 out:
-	if (clock)
+	if (clock) {
 		clock_destroy(clock);
+	}
+
+	sk_close_initial_namespace_fd();
 	config_destroy(cfg);
 	return err;
 }
diff -u -r -N linuxptp-3.1.1/sk.c linuxptp-3.1.1.b/sk.c
--- linuxptp-3.1.1/sk.c	2021-07-04 21:51:59.000000000 -0400
+++ linuxptp-3.1.1.b/sk.c	2022-03-04 08:04:21.004995844 -0500
@@ -26,6 +26,8 @@
 #include <netinet/in.h>
 #include <string.h>
 #include <sys/ioctl.h>
+#include <fcntl.h>
+#include <sched.h>
 #include <unistd.h>
 #include <ifaddrs.h>
 #include <stdlib.h>
@@ -43,6 +45,9 @@
 int sk_check_fupsync;
 enum hwts_filter_mode sk_hwts_filter_mode = HWTS_FILTER_NORMAL;
 
+static int sk_initial_fd = -1;
+static char sk_netns_path[64];
+
 /* private methods */
 
 static void init_ifreq(struct ifreq *ifreq, struct hwtstamp_config *cfg,
@@ -155,6 +160,52 @@
 	}
 	return 0;
 }
+
+int sk_initiate_namespace_reassociation(const char *netns) {
+	snprintf(sk_netns_path, sizeof sk_netns_path, "%s", netns);
+	sk_initial_fd = open("/proc/self/ns/net", O_RDONLY);
+	if (sk_initial_fd < 0) {
+		pr_err("open initial namespace fd failed: %m");
+		return -1;
+	}
+	return 0;
+}
+
+void sk_close_initial_namespace_fd(void) {
+	if (sk_initial_fd >= 0) {
+		close(sk_initial_fd);
+		sk_initial_fd = -1;
+	}
+}
+
+int sk_reassociate_namespace(const char *ns)
+{
+	char path[64];
+	int fd;
+
+	if (*ns == '\0') {
+		if (setns(sk_initial_fd, CLONE_NEWNET) < 0) {
+			pr_err("setns failed: %m");
+			return -1;
+		}
+		pr_notice("setns for default namespace ok");
+        } else {
+		snprintf(path, sizeof path, "%s%s", sk_netns_path, ns);
+		fd = open(path, O_RDONLY);
+		if (fd < 0) {
+			pr_err("failed to open %s: %m", path);
+			return -1;
+		}
+		if (setns(fd, CLONE_NEWNET) < 0) {
+			pr_err("setns failed: %m");
+			close(fd);
+			return -1;
+		}
+		pr_notice("setns ok, %s", path);
+		close(fd);
+	}
+	return 0;
+}
 
 int sk_get_ts_info(const char *name, struct sk_ts_info *sk_info)
 {
diff -u -r -N linuxptp-3.1.1/sk.h linuxptp-3.1.1.b/sk.h
--- linuxptp-3.1.1/sk.h	2021-07-04 21:51:59.000000000 -0400
+++ linuxptp-3.1.1.b/sk.h	2022-03-04 08:04:21.004995844 -0500
@@ -71,6 +71,25 @@
 int sk_general_init(int fd);
 
 /**
+ * Initialize netns path and initial file descriptor
+ * @param netns     Path to netns object.
+ * @return          zero on success, negative on failure.
+ */
+int sk_initiate_namespace_reassociation(const char *netns);
+
+/**
+ * Close initial namespace file descriptor
+ */
+void sk_close_initial_namespace_fd(void);
+
+/**
+ * Prepare namespace for the process before socket is opened
+ * @param ns	    The namespace to reassociate to.
+ * @return          zero on success, negative on failure.
+ */
+int sk_reassociate_namespace(const char *ns);
+
+/**
  * Obtain supported timestamping information
  * @param name	    The name of the interface
  * @param info      Struct containing obtained timestamping information.
diff -u -r -N linuxptp-3.1.1/transport.c linuxptp-3.1.1.b/transport.c
--- linuxptp-3.1.1/transport.c	2021-07-04 21:51:59.000000000 -0400
+++ linuxptp-3.1.1.b/transport.c	2022-03-04 08:16:18.399082665 -0500
@@ -21,7 +21,11 @@
 
 #include "transport.h"
 #include "transport_private.h"
+#include "config.h"
+#include "print.h"
+#include "interface.h"
 #include "raw.h"
+#include "sk.h"
 #include "udp.h"
 #include "udp6.h"
 #include "uds.h"
@@ -34,6 +38,11 @@
 int transport_open(struct transport *t, struct interface *iface,
 		   struct fdarray *fda, enum timestamp_type tt)
 {
+	char *ns = config_get_string(t->cfg, iface->name, "network_namespace");
+	if (sk_reassociate_namespace(ns)) {
+		pr_err("sk_reassociate_namespace failed");
+		return -1;
+	}
 	return t->open(t, iface, fda, tt);
 }
 
