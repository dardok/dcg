diff -u -r -N a/gdal/src/ossimGdalOgrVectorAnnotation.cpp b/gdal/src/ossimGdalOgrVectorAnnotation.cpp
--- a/gdal/src/ossimGdalOgrVectorAnnotation.cpp	2019-10-15 14:47:25.000000000 -0400
+++ b/gdal/src/ossimGdalOgrVectorAnnotation.cpp	2023-10-31 08:04:48.209159151 -0400
@@ -317,7 +317,7 @@
    loadOmdFile();
    
    theLayersToRenderFlagList.clear();
-   vector<ossimGpt> points;
+   std::vector<ossimGpt> points;
    if(isOpen())
    {
       int i = 0;
@@ -596,7 +596,7 @@
    return (theDataSource!=NULL);
 }
 
-void ossimGdalOgrVectorAnnotation::initializeBoundingRec(vector<ossimGpt> points)
+void ossimGdalOgrVectorAnnotation::initializeBoundingRec(std::vector<ossimGpt> points)
 {
    theImageBound.makeNan();
 
@@ -779,7 +779,7 @@
       ossimRefPtr<ossimRgbImage> image = new ossimRgbImage;
       
       image->setCurrentImageData(tile);
-      vector<ossimAnnotationObject*> objectList;
+      std::vector<ossimAnnotationObject*> objectList;
       
       while(current!=featuresToRender.end())
       {
@@ -1542,7 +1542,7 @@
 }
 
 
-void ossimGdalOgrVectorAnnotation::getFeature(vector<ossimAnnotationObject*>& featureList,
+void ossimGdalOgrVectorAnnotation::getFeature(std::vector<ossimAnnotationObject*>& featureList,
                                               long id)
 {
    std::multimap<long, ossimAnnotationObject*>::iterator iter = theFeatureCacheTable.find(id);
@@ -1619,7 +1619,7 @@
    if(ring)
    {
       int upper = ring->getNumPoints();
-      vector<ossimGpt> points(upper);
+      std::vector<ossimGpt> points(upper);
       for(int i = 0; i < upper; ++i)
       {
          OGRPoint ogrPt;
@@ -1663,7 +1663,7 @@
           {
              int j = 0;
              int upper = ring->getNumPoints();
-             vector<ossimGpt> points(upper);
+             std::vector<ossimGpt> points(upper);
              for(j = 0; j < upper; ++j)
              {
                 OGRPoint ogrPt;
@@ -1726,7 +1726,7 @@
    {
       color = thePenColor;
    }
-   vector<ossimGpt> polyLine(upper);
+   std::vector<ossimGpt> polyLine(upper);
    for(int i = 0; i < upper; ++i)
    {
       OGRPoint ogrPt;
@@ -1785,7 +1785,7 @@
       origin = theImageGeometry->getProjection()->origin();
    }
 
-   vector<ossimGeoPolygon> geoPoly;
+   std::vector<ossimGeoPolygon> geoPoly;
    for(ossim_uint32 geomIdx = 0; geomIdx < numGeometries; ++geomIdx)
    {
       OGRGeometry* geomRef = multiLineString->getGeometryRef(geomIdx);
@@ -1793,7 +1793,7 @@
       if (lineString)
       {
          int upper = lineString->getNumPoints();
-         vector<ossimGpt> polyLine(upper);
+         std::vector<ossimGpt> polyLine(upper);
          for(int i = 0; i < upper; ++i)
          {
             OGRPoint ogrPt;
@@ -1965,7 +1965,7 @@
       origin = theImageGeometry->getProjection()->origin();
    }
 
-   vector<ossimGeoPolygon> geoPoly;
+   std::vector<ossimGeoPolygon> geoPoly;
    for(ossim_uint32 geomIdx = 0; geomIdx < numGeometries; ++geomIdx)
    {
       OGRGeometry* geomRef = multiPolygon->getGeometryRef(geomIdx);
